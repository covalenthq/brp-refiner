version: '3'

services:
  eth-node:
    image: "gcr.io/covalent-project/operational-staking:latest-rudder"
    container_name: hardhat-node
    restart:  on-failure
    expose:
      - 8545:8545
    entrypoint: |
      /bin/bash -l -c "
      echo "hardhat-node-address:" $NODE_ETHEREUM_MAINNET
      ./entrypoint.sh;"
    networks:
      - cqt-net
    environment:
      - ERIGON_NODE=${ERIGON_NODE}
    ports:
      - 8545:8545

  operational-staking:
    image: "gcr.io/covalent-project/operational-staking:latest-rudder"
    container_name: proof-chain
    restart: on-failure
    expose:
      - 8008
    entrypoint: |
      /bin/bash -l -c "
      echo Waiting for hardhat node to start up...;
      sleep 20;
      echo hard-hat node started!;
      echo "forked-node-address:" $ERIGON_NODE
      npm run docker:deploy;
      nc -v rudder 8008;"
    depends_on:
      - eth-node
    networks:
      - cqt-net
    ports:
      - "8008:8008"

  ipfs-pinner:
    image: "gcr.io/covalent-project/ipfs-pinner:latest"
    volumes:
      - /tmp/data/.ipfs:/root/.ipfs/
    container_name: ipfs-pinner
    restart:  on-failure
    expose:
      - 4001:4001
      - 3000:3000
    environment:
      - WEB3_JWT=${WEB3_JWT}
    networks:
      - cqt-net
    ports:
      - 4001:4001
      - 3000:3000

  rudder:
    image: "gcr.io/covalent-project/rudder:latest"
    container_name: rudder
    links:
      - "ipfs-pinner:ipfs-pinner"
    # build: 
    #   context: .
    #   dockerfile: Dockerfile
    restart: on-failure
    depends_on:
        ipfs-pinner:
          condition: service_started
    entrypoint: >
     /bin/bash -l -c "
       echo Waiting for proof-chain to be deployed...;
       while ! nc -v -l -k -p 8008;
       do
       sleep 1;
       done;
       echo proof-chain contracts deployed!;
       mix test;"
      #  exit 0;"
    environment:
     - NODE_ETHEREUM_MAINNET=${NODE_ETHEREUM_MAINNET}
     - BLOCK_RESULT_OPERATOR_PRIVATE_KEY=${BLOCK_RESULT_OPERATOR_PRIVATE_KEY}
    networks:
      - cqt-net
    # ports: 
    # # - "8080:8080"

networks:
  cqt-net: