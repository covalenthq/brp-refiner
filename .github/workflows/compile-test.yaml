name: compile-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

jobs:
  deps:
    name: Dependencies
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        elixir: [1.13.4]
        otp: [25]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # action is broken - https://github.com/actions/setup-elixir/issues/31
      # - name: Setup
      #   uses: actions/setup-elixir@v1
      #   with:
      #     elixir-version: ${{ matrix.elixir }}
      #     otp-version: ${{ matrix.otp }}

      - name: Install Elixir
        run: wget https://packages.erlang-solutions.com/erlang/debian/pool/elixir_1.13.4-1~ubuntu~focal_all.deb && sudo dpkg -i 'elixir_1.13.4-1~ubuntu~focal_all.deb'
    
      - name: Install hex
        run: mix local.hex --force
          
      - name: Install hex
        run: mix local.rebar --force

      - name: Install OTP
        run: |
          wget -q -O otp.tar.gz https://repo.hex.pm/builds/otp/ubuntu-20.04/OTP-25.0.4.tar.gz
          mkdir -p .setup-elixir/otp
          tar zxf otp.tar.gz -C .setup-elixir/otp --strip-components=1
          rm otp.tar.gz
          .setup-elixir/otp/Install -minimal $(pwd)/.setup-elixir/otp
          echo "$(pwd)/.setup-elixir/otp/bin" >> $GITHUB_PATH


      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile

      - name: Check Code Format
        run: mix format --check-formatted

      # - name: Run Credo (SCA)
      #   run: mix credo

      # - name: Run Dialyzer (SCA)
      #   run: mix dialyzer --plt

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      
      - name: Run Docker Compose
        run: docker compose --env-file '.env' -f 'docker-compose-local.yml' up --remove-orphans
        
      - name: Run test
        run: mix test --trace --slowest 10
